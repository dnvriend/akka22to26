akka {
  stdout-loglevel = debug // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  log-dead-letters-during-shutdown = on
  loglevel = debug
  log-dead-letters = on
  log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

  actor {
    serialize-messages = on

    debug {
      receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off // log all actor lifecycle events of all actors
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }

  persistence {
    journal {
      plugin = "jdbc-journal"
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
    }
  }
}

jdbc-journal {
  slick = ${slick}
  slick.db.numThreads = 4
  slick.db.maxConnections = 2
  slick.db.minConnections = 1

  recovery-event-timeout = 60m
}

jdbc-snapshot-store {
  slick = ${slick}
  slick.db.numThreads = 4
  slick.db.maxConnections = 2
  slick.db.minConnections = 1
}

slick {
  driver = "slick.driver.PostgresDriver$"
  db {
    host = "boot2docker"
    url = "jdbc:postgresql://boot2docker:5432/docker"
    user = "docker"
    password = "docker"
    driver = "org.postgresql.Driver"
    connectionTestQuery = "SELECT 1"
  }
}